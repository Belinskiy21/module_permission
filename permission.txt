module Permission{

  before  do {
  findUser(user)
  checkAbility(user)
  findPermission(permission), only[:grantPermission]
  findRole(role), only[:grantRole]
  }

  function grantPermission( user, permission):user;
  function grantRole(user, role):user;

  private
  function findUser(user):user;
  function checkAbility(user):boolean, message;
  function findRole(role):role;
  function findPermission(permission):permission;

  class Role{
    String name;
    Array permissions;
  }

  Table Permissions{
    id,
    type
  }
  Table Roles{
    id,
    name
  }
  Table role_permissions{
    role_id,
    permission_id
  }
  Table Users{
    id,
    name
  }
  Table user_permissions{
    user_id,
    permission_id
  }
  Table user_roles{
    user_id,
    role_id
  }
}

Tests {
  let(user{id: 1, name: 'Andrew', permission: nil, role: nil})
  let(user{id: 2, name: 'Stefan', permission: 'Read', role{name: 'Admin'} })
  let(permission{type: 'Read'})
  let(role{name: 'Admin'})

  1) Add a permission to  a user with: grantPermission(user{name: “Andrew”}, permission(type: “Read”)): true;

  2) Add a user to a role with: grantRole(user{id: 1}, role{name: “Admin”}): true;

  3) Add a permission to  a user with: grantPermission(user{name: “Oleg”}, permission(type: “Write”)): false;

  4) Add a user to a role with: grantRole(user{id: 1}, role{name: “Customer”}): false;

  5) Add a user to a role with: grantRole(user{id: 2}, role{name: “Admin”}): false, message;

  6) Add a permission to  a user with: grantPermission(user{name: “Stefan”}, permission(type: “Read”)): false, message;

}
